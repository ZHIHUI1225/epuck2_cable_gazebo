<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/zhihui/Epuck2_ws/src/epuck2/models/urdf/Epuck2.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="epuck2">
  <!-- *********************** WHEEL ODOMETRY ***************************    -->
  <!--skid_steer_drive_controller-->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="two_wheeled_robot_diff_drive">
      <ros>
        <!-- <namespace>/Epuck2</namespace> -->
      </ros>
      <update_rate>100</update_rate>
      <!-- wheels -->
      <left_joint>left_joint</left_joint>
      <right_joint>right_joint</right_joint>
      <!-- kinematics -->
      <wheel_separation>0.05398</wheel_separation>
      <wheel_diameter>0.040</wheel_diameter>
      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
      <!-- Receive velocity commands on this ROS topic -->
      <command_topic>epuck2/cmd_vel</command_topic>
      <!-- output -->
      <!-- When false, publish no wheel odometry data to a ROS topic -->
      <publish_odom>true</publish_odom>
      <!-- When true, publish coordinate transform from odom to base_footprint -->
      <!-- I usually use the robot_localization package to publish this transform -->
      <publish_odom_tf>false</publish_odom_tf>
      <!-- When true, publish coordinate transform from base_link to the wheels -->
      <!-- The robot_state_publisher package is often used to publish this transform -->
      <publish_wheel_tf>true</publish_wheel_tf>
      <odometry_topic>puck2/odom_diffdrive</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <odometry_source>1</odometry_source>
      <ros>
        <remapping>odom:=wheel/odometry</remapping>
      </ros>
    </plugin>
  </gazebo>
  <!-- *********************** LIDAR SETUP **********************************  -->
  <gazebo reference="base_laser">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <update_rate>30</update_rate>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="gazebo_ros_head_hokuyo_controller">
        <ros>
          <namespace>/epuck2</namespace>
          <argument>~/out:=scan</argument>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="base_laser_joint">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <material>Gazebo/Black</material>
  </gazebo>
  <!--*********************** DRIVE WHEELS ******************************  -->
  <gazebo reference="right_wheel">
    <selfCollide>true</selfCollide>
    <mu1>10</mu1>
    <mu2>10</mu2>
  </gazebo>
  <gazebo reference="left_wheel">
    <selfCollide>true</selfCollide>
    <mu1>10</mu1>
    <mu2>10</mu2>
  </gazebo>
  <transmission name="right_motor_t">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_motor_m">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>50</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="left_motor_t">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_motor_m">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>50</mechanicalReduction>
    </actuator>
  </transmission>
  <!--***********************base control ********************************
<gazebo>
  <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>100.0</updateRate>
    <bodyName>base_link</bodyName>
    <topicName>position</topicName>
    <gaussianNoise>0</gaussianNoise>
    <frameName>map</frameName>
    <xyzOffsets>0 0 0</xyzOffsets> 
    <rpyOffsets>0 0 0</rpyOffsets>
  </plugin>
</gazebo>-->
  <!-- ros_control plugin
  <gazebo>
    <plugin name="gazebo_ros_control"
            filename="libgazebo_ros_control.so">
      <robotNamespace>/epuck</robotNamespace>
      <robotParam>/robot_description</robotParam>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo> -->
  <!--***************************ros control**********************
<gazebo>
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
   <robotNamespace>/epuck2</robotNamespace>
   <alwaysOn>true</alwaysOn>
   <updateRate>1000.0</updateRate>
  </plugin>
</gazebo>-->
  <link name="base_link"/>
  <joint name="base_link_to_main_body" type="fixed">
    <parent link="base_link"/>
    <child link="main_body"/>
  </joint>
  <link name="main_body">
    <inertial>
      <origin rpy="0 0 0" xyz="9.0274E-05 -0.00041659 0.019845"/>
      <mass value="0.063515"/>
      <inertia ixx="3.2227E-05" ixy="-2.691E-07" ixz="4.7122E-08" iyy="2.4227E-05" iyz="-1.2861E-06" izz="3.3868E-05"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://epuck_description/meshes/main_body.STL"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://epuck_description/meshes/main_body.STL"/>
      </geometry>
    </collision>
  </link>
  <link name="left_wheel">
    <inertial>
      <origin rpy="0 0 0" xyz="-0.00048709 -3.5245E-18 2.4286E-17"/>
      <mass value="0.0040981"/>
      <inertia ixx="8.267E-07" ixy="-9.8761E-23" ixz="-8.6429E-13" iyy="4.304E-07" iyz="-2.3376E-22" izz="4.304E-07"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://epuck_description/meshes/left_wheel.STL"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://epuck_description/meshes/left_wheel.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="left_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.0278 0 0.02"/>
    <parent link="main_body"/>
    <child link="left_wheel"/>
    <axis xyz="1 0 0"/>
    <limit effort="0.001" velocity="10"/>
  </joint>
  <link name="right_wheel">
    <inertial>
      <origin rpy="0 0 0" xyz="0.00065056 4.0415E-18 7.2858E-17"/>
      <mass value="0.0038059"/>
      <inertia ixx="8.2274E-07" ixy="-1.0753E-22" ixz="8.6429E-13" iyy="4.2585E-07" iyz="2.3307E-22" izz="4.2585E-07"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://epuck_description/meshes/right_wheel.STL"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://epuck_description/meshes/right_wheel.STL"/>
      </geometry>
    </collision>
  </link>
  <joint name="right_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.0278 0 0.02"/>
    <parent link="main_body"/>
    <child link="right_wheel"/>
    <axis xyz="1 0 0"/>
    <limit effort="0.001" velocity="10"/>
  </joint>
  <!-- Hokuyo Laser -->
  <link name="base_laser">
    <inertial>
      <mass value="1e-5"/>
      <origin rpy=" 0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
    <visual name="hokuyo_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- <mesh filename="$(find bocbot)/meshes/hokuyo.dae"/> -->
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
    <collision name="hokuyo_colision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
  </link>
  <joint name="base_laser_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="0 0 0.05596"/>
    <parent link="base_link"/>
    <child link="base_laser"/>
  </joint>
  <gazebo reference="main_body">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="right_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="left_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
</robot>
